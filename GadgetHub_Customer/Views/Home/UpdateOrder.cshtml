@model GadgetHub_Server.Models.Orders

@{
    ViewBag.Title = "UpdateOrder";
}

<div class="container my-5">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-secondary text-white text-center">
            <h3 class="mb-0">
                <i class="fas fa-edit me-2"></i> Update Order
            </h3>
        </div>
        <div class="card-body bg-white">

            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <div class="mb-3">
                    @Html.LabelFor(model => model.OrderID, htmlAttributes: new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.OrderID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>

                <div class="mb-4">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label fw-bold" })
                    <input type="text" class="form-control" value="Pending" readonly />
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>

                <div class="d-grid mb-3">
                    <button type="submit" class="btn btn-secondary btn-lg">
                        <i class="fas fa-save me-2"></i> Save Changes
                    </button>
                </div>
            }
        </div>

        <div class="card-footer text-center bg-light">
            @Html.ActionLink("← Back to Order List", "GetOrder", null, new { @class = "btn btn-outline-secondary" })
        </div>
    </div>
</div>
